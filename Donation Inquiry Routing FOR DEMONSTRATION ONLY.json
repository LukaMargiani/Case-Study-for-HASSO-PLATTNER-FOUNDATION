{
  "name": "Donation Inquiry Routing",
  "nodes": [
    {
      "parameters": {
        "options": {
          "customEmailConfig": "[\"UNSEEN\"]",
          "trackLastMessageId": true
        }
      },
      "type": "n8n-nodes-base.emailReadImap",
      "typeVersion": 2.1,
      "position": [
        16,
        336
      ],
      "id": "f439e0a1-701a-4b86-942a-2b1220f91c40",
      "name": "Email Trigger (IMAP)",
      "credentials": {
        "imap": {
          "id": "4SkPUCb0mDZEks3J",
          "name": "IMAP account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.content.category }}",
                    "rightValue": "New Application",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "b78f36e7-f690-489a-8606-d734fd272844"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "NewApps"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a8cde45d-be8e-4338-ae6e-0a624e06a4f3",
                    "leftValue": "={{ $json.message.content.category }}",
                    "rightValue": "New Application",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Others"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.3,
      "position": [
        544,
        336
      ],
      "id": "8bf86d69-0b63-4551-9dbc-e5201aa34c0d",
      "name": "Switch"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "messages": {
          "values": [
            {
              "content": "=You are an AI email triage assistant for a foundation’s recruiting and application management system.\n\nYour job:\n1. Read the following email (From, To, Subject, Body).\n2. Classify the email’s intent into exactly ONE of these categories:\n   - New Application\n   - Status Update\n   - General Question\n   - Irrelevant\n3. Extract the following entities from the email text, if they exist:\n   - Organization Name\n   - Contact Person\n   - Project Title\n4. Return your response STRICTLY as a single valid JSON object. Do not include any text, explanation, or markdown.\n\nJSON schema:\n{\n  \"category\": \"\",\n  \"organization_name\": \"\",\n  \"contact_person\": \"\",\n  \"project_title\": \"\",\n  \"email_from\": \"\",\n  \"email_to\": \"\",\n  \"email_subject\": \"\",\n  \"email_body\": \"\"\n}\n\nIf an entity is not mentioned, leave its value as an empty string (\"\").\n\nEmail details:\nFrom: {{$json[\"from\"]}}\nTo: {{$json[\"to\"]}}\nSubject: {{$json[\"subject\"]}}\nBody: {{$json[\"textPlain\"]}}\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {
          "temperature": 0
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        208,
        336
      ],
      "id": "00c9c67d-0eb3-4019-bde7-b1b17531d28c",
      "name": "AI Triage",
      "retryOnFail": true,
      "waitBetweenTries": 2500,
      "credentials": {
        "openAiApi": {
          "id": "7j9GdHx7KOY8ZZP4",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "fromEmail": "lukamarg@gmail.com",
        "toEmail": "={{ $json.message.content.email_from }}",
        "subject": "Acknowledgment: Your application has been received",
        "emailFormat": "text",
        "text": "=Dear {{ $json.message.content.contact_person || \"Sir/Madam\" }},\n\nThank you for submitting your application for {{$json[\"project_title\"] || \"your project\"}} with {{$json[\"organization_name\"] || \"your organization\"}}. \nYou can track your application here: [https://jobs.plattnerfoundation.org/HPC/search].\n\nBest regards,\nRecruiting Team",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        880,
        192
      ],
      "id": "4f9d73d7-d39a-49e9-9fb3-ae8359eb79d9",
      "name": "Bot Reply",
      "webhookId": "65c685ec-d9e8-4a04-89a4-e93f09378554",
      "retryOnFail": true,
      "waitBetweenTries": 2000,
      "credentials": {
        "smtp": {
          "id": "O3CHzFLZRwXGffIp",
          "name": "SMTP account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "email_triage_log",
          "mode": "list",
          "cachedResultName": "email_triage_log"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "email_from": "={{ $json.message.content.email_from }}",
            "email_to": "={{ $json.message.content.email_to }}",
            "subject": "={{ $json.message.content.email_subject }}",
            "body": "={{ $json.message.content.email_body }}",
            "project_title": "={{ $json.message.content.project_title }}",
            "contact_person": "={{ $json.message.content.contact_person }}",
            "organization": "={{ $json.message.content.organization_name }}",
            "category": "={{ $json.message.content.category }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "received_at",
              "displayName": "received_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "email_from",
              "displayName": "email_from",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "email_to",
              "displayName": "email_to",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "subject",
              "displayName": "subject",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "body",
              "displayName": "body",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "category",
              "displayName": "category",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "organization",
              "displayName": "organization",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "contact_person",
              "displayName": "contact_person",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "project_title",
              "displayName": "project_title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        880,
        352
      ],
      "id": "7a65f045-10d3-401c-a483-619415eeefaf",
      "name": "Log Data",
      "credentials": {
        "postgres": {
          "id": "V8KuQmgGpRUOuZNb",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "fromEmail": "={{ $json.message.content.from }}",
        "toEmail": "lukamarg@gmail.com",
        "subject": "={{ $json.message.content.subject }}",
        "emailFormat": "text",
        "text": "={{ $json.message.content.body }}",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        544,
        112
      ],
      "id": "2d86196f-1237-4b97-af39-4186d0865a67",
      "name": "Send email",
      "webhookId": "d8c7f820-5d49-42a4-b5df-c185419d1362",
      "credentials": {
        "smtp": {
          "id": "O3CHzFLZRwXGffIp",
          "name": "SMTP account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        16,
        112
      ],
      "id": "534c6544-2239-408d-bcd8-cce142658e99",
      "name": "Trigger"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-pro",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-pro"
        },
        "messages": {
          "values": [
            {
              "content": "\nYou are a professional email generator for a project submission workflow. \\nYour task is to generate ONE realistic, self-contained mock email in JSON format.\\n\\nEach time you are invoked, randomly select ONE of the following four categories:\\n1. New Application\\n2. Status Update\\n3. General Question\\n4. Irrelevant\\n\\n⚠️ Important rules:\\n- Do NOT mention or reveal the category anywhere in the email.\\n- Always output ONLY valid JSON — no markdown, no explanations, no comments.\\n- The output must include exactly these keys:\\n  - \\\"from\\\": a realistic sender email (e.g., name@organization.com)\\n  - \\\"subject\\\": a natural subject line appropriate to the chosen category\\n  - \\\"body\\\": full plaintext email content, with natural paragraphing if needed\\n\\n---\\n\\n📧 **Category behavior and content rules:**\\n\\n1. **New Application**\\n   - Represents an organization submitting a new project.\\n   - Must include: Organization Name, Project Title, and Contact Person.\\n   - Example:\\n     {\\n       \\\"from\\\": \\\"natalie.green@ecoimpact.org\\\",\\n       \\\"subject\\\": \\\"New Project Submission: Green Horizon Initiative\\\",\\n       \\\"body\\\": \\\"Dear Committee,\\\\n\\\\nWe are submitting our new project titled 'Green Horizon Initiative' from 'EcoImpact Foundation'. The main contact person is Natalie Green.\\\\n\\\\nAttached are the proposal documents for your review.\\\\n\\\\nBest regards,\\\\nNatalie Green\\\"\\n     }\\n\\n2. **Status Update**\\n   - Someone following up on a previous submission.\\n   - Must include: Organization Name, Project Title, and Contact Person.\\n   - Example:\\n     {\\n       \\\"from\\\": \\\"brian.wright@envirocore.net\\\",\\n       \\\"subject\\\": \\\"Status Check: Urban Reforestation Grant\\\",\\n       \\\"body\\\": \\\"Hello,\\\\n\\\\nI am writing to follow up on the status of our recent submission titled 'Urban Reforestation Grant' from 'EnviroCore Foundation'. The contact person is Brian Wright.\\\\n\\\\nCould you please share an update on the review process?\\\\n\\\\nThank you,\\\\nBrian Wright\\\"\\n     }\\n\\n3. **General Question**\\n   - A casual or professional inquiry unrelated to a specific submission.\\n   - Must include either Organization Name OR Contact Person (not both required).\\n   - Example:\\n     {\\n       \\\"from\\\": \\\"lisa.morgan@cleantechlabs.com\\\",\\n       \\\"subject\\\": \\\"Question about eligibility criteria\\\",\\n       \\\"body\\\": \\\"Hi there,\\\\n\\\\nI represent 'CleanTech Labs' and had a question about your eligibility requirements. Are nonprofit research teams eligible to apply for funding?\\\\n\\\\nThanks,\\\\nLisa Morgan\\\"\\n     }\\n\\n4. **Irrelevant**\\n   - Spam, marketing, personal, or unrelated message.\\n   - Should sound natural but completely unrelated to the project context.\\n   - Example:\\n     {\\n       \\\"from\\\": \\\"newsletter@urbanstyle.com\\\",\\n       \\\"subject\\\": \\\"Get 25% off your next order!\\\",\\n       \\\"body\\\": \\\"Shop the latest styles in our new fall collection. Free shipping on orders over $50!\\\"\\n     }\\n\\n---\\n\\n🎲 **Output instructions:**\\n- Randomly select one category from the four above.\\n- Generate ONE complete, natural-sounding email consistent with that category.\\n- Output ONLY the JSON object in valid format — no additional commentary, explanations, or markdown.\\n\n            "
            }
          ]
        },
        "jsonOutput": true,
        "options": {
          "temperature": 0.9,
          "topP": 0.9,
          "topK": 40
        }
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        224,
        -176
      ],
      "id": "03ffd809-e895-461a-907c-227a6f55ede1",
      "name": "Mock Email Gen",
      "credentials": {
        "googlePalmApi": {
          "id": "HQNIavkvmsXntOiU",
          "name": "Google Gemini(PaLM) Api account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// Function node: Parse LLM output\nreturn [\n  {\n    json: JSON.parse($json[\"content\"][\"parts\"][0][\"text\"])\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        544,
        -176
      ],
      "id": "5a097164-8d01-4e36-8e78-d4f557cb0076",
      "name": "Parse Gemini Output",
      "disabled": true
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "GPT-4O"
        },
        "messages": {
          "values": [
            {
              "content": "You are a professional email generator for a project submission workflow.\nYour task is to generate ONE realistic, self-contained mock email in valid JSON format.\n\nEach time you are invoked, randomly select one of the following categories:\n\nCategory\tProbability\n1. New Application\t50%\n2. Status Update\t16.6%\n3. General Question\t16.6%\n4. Irrelevant\t16.6%\n\nGLOBAL RULES (APPLY TO ALL CATEGORIES)\n\nNever mention, hint at, or reuse words from the category names in the email text or subject.\n(For example, do not say “application,” “update,” “question,” or “irrelevant.”)\n\nAlways produce only valid JSON — no markdown, no comments, no code blocks, no prose.\n\nThe JSON object must include exactly these keys:\n{\n  \"from\": \"\",\n  \"subject\": \"\",\n  \"body\": \"\"\n}\nMake the subject lines varied and natural, not formulaic or repetitive.\n\nWrite the body as a natural, human-like email (realistic length and tone).\n\nCATEGORY DEFINITIONS & RULES\n1. New Application (50%)\n\nRepresents an organization submitting a new project for review.\n\n2. Status Update (16.6%)\n\nSomeone politely inquiring about progress on a previous submission.\n\n3. General Question (16.6%)\n\nA professional inquiry not tied to a specific submission.\n\n4. Irrelevant (16.6%)\n\nCompletely unrelated, spam-like, or personal message.\n\nOUTPUT REQUIREMENTS\n\nOutput exactly one of the four categories above, selected per probabilities listed.\n\nReturn only a single valid JSON object — nothing else (no preface, no explanation, no markdown).\n\n\n\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        208,
        112
      ],
      "id": "2022098b-9aef-4501-827f-333f62c516d9",
      "name": "Mock Mail Gen",
      "credentials": {
        "openAiApi": {
          "id": "7j9GdHx7KOY8ZZP4",
          "name": "OpenAi account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Email Trigger (IMAP)": {
      "main": [
        [
          {
            "node": "AI Triage",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Bot Reply",
            "type": "main",
            "index": 0
          },
          {
            "node": "Log Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Triage": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Trigger": {
      "main": [
        [
          {
            "node": "Mock Mail Gen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mock Email Gen": {
      "main": [
        [
          {
            "node": "Parse Gemini Output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Gemini Output": {
      "main": [
        []
      ]
    },
    "Mock Mail Gen": {
      "main": [
        [
          {
            "node": "Send email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "ce5610d8-678d-492c-b673-b9c48a5e4491",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "6bc83b9c10b875061472240540fb6cfd523e7f7642c8dc3453f41e76bd661eb2"
  },
  "id": "CI0LuBywmiJTthC9",
  "tags": []
}